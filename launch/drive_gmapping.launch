<launch>
	<node name="odom_pub" pkg="mower" type="mower_odom.py" output="screen" />
	
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mower)/urdf/mower_body.urdf.xacro'" />
    	<node name="map_server" pkg="map_server" type="map_server" args="$(find mower)/fake_map/map1.yaml"/>
    	<!--<node name="static_map" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /map /odom 120"/> -->
	

	<include file="$(find mower)/launch/imu.launch" />

	<!--<node name="mower_laser_tf" pkg="mower" type="tf_broadcaster" />-->
	
    	<node pkg="tf" type="static_transform_publisher" name="base_link2laser_link" args="0.2 0 0.08 0 0 0 /base_link /scan 30"/>
	<node pkg="tf" type="static_transform_publisher" name="base_link2laser_link2" args="0.2 0 0 0 0 0 /scan /camera_link 30"/>
    	<node pkg="tf" type="static_transform_publisher" name="base_link2imu" args="0.1275 0.0 0.0 0 0 0 /base_link /imu 30"/>


    	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
	<include file="$(find moveit_cfg)/launch/planning_context.launch"/>

	<node pkg="robot_localization" type="ekf_localization_node" name="ekf" clear_params="true">
		<rosparam file="$(find mower)/param/ekf.yaml" command="load" />
		<!--remap from="/odometry/filtered" to="/odom"/-->
	</node>

	<node name="gmapping" pkg="">

	
    	

</launch>
